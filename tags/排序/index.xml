<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>排序 on zhuaowei的博客</title>
    <link>https://zhuaowei.top/tags/%E6%8E%92%E5%BA%8F/</link>
    <description>Recent content in 排序 on zhuaowei的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Dec 2023 21:34:27 +0800</lastBuildDate>
    <atom:link href="https://zhuaowei.top/tags/%E6%8E%92%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>洛谷 P2698 [USACO12MAR] Flowerpot S</title>
      <link>https://zhuaowei.top/article/%E6%B4%9B%E8%B0%B7-p2698-usaco12mar-flowerpot-s/</link>
      <pubDate>Sat, 09 Dec 2023 21:34:27 +0800</pubDate>
      <guid>https://zhuaowei.top/article/%E6%B4%9B%E8%B0%B7-p2698-usaco12mar-flowerpot-s/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.luogu.com.cn/problem/P2698&#34;&gt;洛谷 P2698 [USACO12MAR] Flowerpot S&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;思路主要来自B站左程云的视频课程 &lt;a href=&#34;https://www.bilibili.com/video/BV11h4y1w7Bu/&#34;&gt;算法讲解054【必备】单调队列-上&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;求花盆的长度，满足下面的条件，在花盆区间内，第一滴雨水与最后一滴雨水落下的时间差要 &lt;code&gt;&amp;gt;= d&lt;/code&gt;。雨水下落速度恒定 1 单位每秒，也就是求最大高度差满足 &lt;code&gt;&amp;gt;= d&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 646. 最长数对链</title>
      <link>https://zhuaowei.top/article/leetcode-646.-%E6%9C%80%E9%95%BF%E6%95%B0%E5%AF%B9%E9%93%BE/</link>
      <pubDate>Sat, 09 Dec 2023 16:32:55 +0800</pubDate>
      <guid>https://zhuaowei.top/article/leetcode-646.-%E6%9C%80%E9%95%BF%E6%95%B0%E5%AF%B9%E9%93%BE/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/maximum-length-of-pair-chain/description/&#34;&gt;LeetCode 646. 最长数对链&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;思路来自 &lt;a href=&#34;https://www.bilibili.com/video/BV1ne411D7CQ/&#34;&gt;B站左程云的视频课程&lt;/a&gt;，在文章末尾可以直接转到左程云的B站个人空间。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;使用最长递增子序列来求解。两个数对 $nums_i, nums_j (i &amp;lt; j)$ 要形成数对，需要 $right_i &amp;lt; left_j$，当来到 &lt;code&gt;j&lt;/code&gt; 的时候，我们根据 $left_j$ 找到最长的递增数对即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 354. 俄罗斯套娃信封问题</title>
      <link>https://zhuaowei.top/article/leetcode-354.-%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 08 Dec 2023 22:00:14 +0800</pubDate>
      <guid>https://zhuaowei.top/article/leetcode-354.-%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/russian-doll-envelopes/&#34;&gt;354. 俄罗斯套娃信封问题&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;思路来自 &lt;a href=&#34;https://www.bilibili.com/video/BV1ne411D7CQ/&#34;&gt;B站左程云的视频课程&lt;/a&gt;，在文章末尾可以直接转到左程云的B站个人空间。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;信封不能翻转，首先想到排序，在宽度上较大的信封肯定能装下宽度较小的信封，在宽度相同的情况下，应该尽量先装下高度较大的。所以在宽度上，从小到大排序。因为相同宽和高的信封并不能装下，只能装下宽和高比自己小的。所以在宽度相同时，需要将高度按从大到小排序。这样，同样宽度，高度小的就会自动略过前面比自己高的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 2008. 出租车的最大盈利</title>
      <link>https://zhuaowei.top/article/leetcode-2008.-%E5%87%BA%E7%A7%9F%E8%BD%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E7%9B%88%E5%88%A9/</link>
      <pubDate>Fri, 08 Dec 2023 11:01:10 +0800</pubDate>
      <guid>https://zhuaowei.top/article/leetcode-2008.-%E5%87%BA%E7%A7%9F%E8%BD%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E7%9B%88%E5%88%A9/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/maximum-earnings-from-taxi/&#34;&gt;2008. 出租车的最大盈利&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;&#xA;&lt;p&gt;司机在行驶过程中，只能往右走，路程中依次经过 1 -&amp;gt; n，求司机的最大盈利。首先想到动态规划，求解司机在到达 i 点时获得的最大盈利。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法复杂度介绍、三种常见排序算法以及二分查找算法</title>
      <link>https://zhuaowei.top/article/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%BB%8B%E7%BB%8D%E4%B8%89%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%BB%A5%E5%8F%8A%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 14 Nov 2022 15:45:35 +0800</pubDate>
      <guid>https://zhuaowei.top/article/%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%BB%8B%E7%BB%8D%E4%B8%89%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%BB%A5%E5%8F%8A%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;h2 id=&#34;1时间复杂度&#34;&gt;1、时间复杂度&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11操作单元&#34;&gt;1.1、操作单元&lt;/h3&gt;&#xA;&lt;p&gt;程序执行的一个最基本的操作。例如获取数组中第 i 个元素的值，只需计算它的偏移量即可；跳转一次链表，指向下一个单元；执行一次交换操作等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;12时间复杂度&#34;&gt;1.2、时间复杂度&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;估算&lt;/strong&gt;的执行程序所需的&lt;strong&gt;执行操作单元的次数&lt;/strong&gt;，以选择排序为例，计算选择排序算法的时间复杂度。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>单调栈 on zhuaowei的博客</title>
    <link>http://localhost:1313/tags/%E5%8D%95%E8%B0%83%E6%A0%88/</link>
    <description>Recent content in 单调栈 on zhuaowei的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 18 Sep 2024 00:17:06 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%8D%95%E8%B0%83%E6%A0%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 907. 子数组的最小值之和</title>
      <link>http://localhost:1313/article/leetcode-907.-%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Wed, 18 Sep 2024 00:17:06 +0800</pubDate>
      <guid>http://localhost:1313/article/leetcode-907.-%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%8B%E5%92%8C/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/sum-of-subarray-minimums/&#34;&gt;LeetCode 907. 子数组的最小值之和&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;&#xA;&lt;p&gt;以每个元素 i 为数组最小值的子数组，左侧和右侧最多能够延伸多长？求出每个元素的左侧和右侧第一个比自己小的元素位置。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 739. 每日温度</title>
      <link>http://localhost:1313/article/leetcode-739.-%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/</link>
      <pubDate>Wed, 18 Sep 2024 00:16:34 +0800</pubDate>
      <guid>http://localhost:1313/article/leetcode-739.-%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/daily-temperatures/&#34;&gt;LeetCode 739. 每日温度&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;&#xA;&lt;p&gt;使用单调栈求出每个位置的下一个大于该值的索引。&lt;/p&gt;&#xA;&lt;h3 id=&#34;求解过程&#34;&gt;求解过程&lt;/h3&gt;&#xA;&lt;p&gt;创建一个单调栈，和一个ans数组。单调栈维护一个递减的序列，每次来到 i 位置时，将当前值与栈顶值进行比较，如果当前值比较大，那么就把栈顶的值弹出，弹出的值右侧最近的比自己大的位置就是 i。一直弹出，直到栈为空，或者栈顶值比当前值大。弹出完毕后，将当前值入栈，继续下一个位置的判断。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 2866. 美丽塔 II</title>
      <link>http://localhost:1313/article/leetcode-2866.-%E7%BE%8E%E4%B8%BD%E5%A1%94-ii/</link>
      <pubDate>Thu, 21 Dec 2023 14:43:24 +0800</pubDate>
      <guid>http://localhost:1313/article/leetcode-2866.-%E7%BE%8E%E4%B8%BD%E5%A1%94-ii/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/beautiful-towers-ii/&#34;&gt;LeetCode 2866. 美丽塔 II&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;&#xA;&lt;p&gt;根据题意，需要在高度限制下建塔，使得最终的塔能够形成一个山脉的形状。山脉的形状就是，从两侧到山顶是非严格递增的。所以我们可以假设每一个位置作为山顶，求出它左侧非严格递增，右侧非严格递减的子数组之和的最大值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LeetCode 2454. 下一个更大元素 IV</title>
      <link>http://localhost:1313/article/leetcode-2454.-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0-iv/</link>
      <pubDate>Tue, 12 Dec 2023 11:20:50 +0800</pubDate>
      <guid>http://localhost:1313/article/leetcode-2454.-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0-iv/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/next-greater-element-iv/&#34;&gt;LeetCode 2454. 下一个更大元素 IV&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/next-greater-element-iv/solutions/1935583/by-miao-z0-pnss/?envType=daily-question&amp;envId=2023-12-12&#34;&gt;苗 - 【CPP】单调栈 + 优先队列&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;&#xA;&lt;p&gt;将求解下下一个更大元素分成两步，先求下一个更大元素，如果有，存储起来，再求下下一个更大元素。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运输层 on zhuaowei的博客</title>
    <link>http://localhost:1313/tags/%E8%BF%90%E8%BE%93%E5%B1%82/</link>
    <description>Recent content in 运输层 on zhuaowei的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 01 Nov 2022 16:38:24 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E8%BF%90%E8%BE%93%E5%B1%82/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP 的三次握手和四次挥手</title>
      <link>http://localhost:1313/article/tcp-%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</link>
      <pubDate>Tue, 01 Nov 2022 16:38:24 +0800</pubDate>
      <guid>http://localhost:1313/article/tcp-%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/</guid>
      <description>&lt;h2 id=&#34;1tcp-的运输连接管理&#34;&gt;1、TCP 的运输连接管理&lt;/h2&gt;&#xA;&lt;p&gt;TCP 是面向连接的协议，连接建立和连接释放是每次面向连接通信必不可少的过程。运输连接有三个阶段：连接建立、数据传输和连接释放。TCP 连接建立要解决以下三个问题：&lt;/p&gt;</description>
    </item>
    <item>
      <title>TCP 的拥塞控制</title>
      <link>http://localhost:1313/article/tcp-%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Tue, 01 Nov 2022 16:38:20 +0800</pubDate>
      <guid>http://localhost:1313/article/tcp-%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;1tcp-的拥塞控制&#34;&gt;1、TCP 的拥塞控制&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11拥塞控制的一般原理&#34;&gt;1.1、拥塞控制的一般原理&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1、拥塞的定义&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;拥塞（congestion）&lt;/strong&gt;：网络中某一资源的需求超过了该资源所能提供的可用部分，网络性能就要变坏。&lt;/p&gt;&#xA;&lt;p&gt;拥塞是一个复杂的问题，它并不是增加某一个资源就能解决的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TCP 的流量控制</title>
      <link>http://localhost:1313/article/tcp-%E7%9A%84%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Tue, 01 Nov 2022 12:49:44 +0800</pubDate>
      <guid>http://localhost:1313/article/tcp-%E7%9A%84%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;1tcp-的流量控制&#34;&gt;1、TCP 的流量控制&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11利用滑动窗口实现流量控制&#34;&gt;1.1、利用滑动窗口实现流量控制&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1、接收窗口&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;流量控制（flow control）&lt;/strong&gt;：就是让发送方的发送速率不要太快，要让接收方来的及接收。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;区别于拥塞控制：流量控制是点对点的，发送和接收双方的传送速率控制；而拥塞控制是设计到整个网络的，是限制发送速率，防止短时间有大量数据传送进网络，避免整个网络发生拥塞。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TCP 可靠传输的实现</title>
      <link>http://localhost:1313/article/tcp-%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 31 Oct 2022 21:21:51 +0800</pubDate>
      <guid>http://localhost:1313/article/tcp-%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;1tcp-可靠传输的实现&#34;&gt;1、TCP 可靠传输的实现&lt;/h2&gt;&#xA;&lt;p&gt;为了方便描述，假定数据传输只有一个方向。A 发送数据，B 发送确认。&lt;/p&gt;&#xA;&lt;h3 id=&#34;11以字节为单位的滑动窗口&#34;&gt;1.1、以字节为单位的滑动窗口&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1、发送窗口&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;假如 A 收到了 B 发来的确认报文，报文内容是：&lt;code&gt;ack = 31, rwnd = 20&lt;/code&gt;，这说明：B 已经收到了序号为 30 之前的报文了，期待发送的是序号为 31 的报文，窗口大小是 20，也就是 A 能发送序号为 31 - 50 的报文，这个范围就是 A 的&lt;strong&gt;发送窗口&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>传输控制协议 TCP 概述</title>
      <link>http://localhost:1313/article/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE-tcp-%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 30 Oct 2022 19:58:30 +0800</pubDate>
      <guid>http://localhost:1313/article/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE-tcp-%E6%A6%82%E8%BF%B0/</guid>
      <description>&lt;h2 id=&#34;1传输控制协议-tcp-概述&#34;&gt;1、传输控制协议 TCP 概述&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11tcp-的主要特点&#34;&gt;1.1、TCP 的主要特点&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;**TCP 是面向连接的运输层协议。**必须先建立连接，再传送数据，最后断开连接。&lt;/li&gt;&#xA;&lt;li&gt;每一条TCP 连接只能有两个端点（endpoint），每一条 TCP 连接只能是&lt;strong&gt;点对点&lt;/strong&gt;的。&lt;/li&gt;&#xA;&lt;li&gt;TCP 提供&lt;strong&gt;可靠交付&lt;/strong&gt;的服务。无差错、不丢失、不重复、按序到达。&lt;/li&gt;&#xA;&lt;li&gt;TCP 提供&lt;strong&gt;双全工通信&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;面向字节流&lt;/strong&gt;。TCP中的**“流”（stream）指的是流入和流出进程的字节序列**。TCP 把应用程序交下来的数据仅仅看成是一连串的无结构的字节流。TCP 并不知道所传送的字节流的含义。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;一个 TCP 报文段通常包含上千个字节。TCP 连接是一条虚连接。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用户数据报协议 UDP</title>
      <link>http://localhost:1313/article/%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%8D%8F%E8%AE%AE-udp/</link>
      <pubDate>Sun, 30 Oct 2022 19:55:16 +0800</pubDate>
      <guid>http://localhost:1313/article/%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%8D%8F%E8%AE%AE-udp/</guid>
      <description>&lt;h2 id=&#34;1udp-用户数据报协议&#34;&gt;1、UDP 用户数据报协议&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11udp-概述&#34;&gt;1.1、UDP 概述&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;主要特点&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP是无连接的&lt;/strong&gt;，发送前不需要建立连接。&lt;/li&gt;&#xA;&lt;li&gt;UDP 使用&lt;strong&gt;尽最大努力交付&lt;/strong&gt;，即不保证可靠交付，因为主机不需要维持复杂的连接状态表。&lt;/li&gt;&#xA;&lt;li&gt;UDP 是&lt;strong&gt;面向报文的&lt;/strong&gt;。对应用层交下来的报文，加个头部就发了，保留这些报文的边界，不做其他处理。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP 没有拥塞控制，网络拥塞并不会降低发送速率&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP 支持一对一、一对多、多对一和多对多的交互通信&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UDP 的首部开销小，只需要 8 字节&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;12udp-的首部格式&#34;&gt;1.2、UDP 的首部格式&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;源端口&lt;/strong&gt;：16 位，需要回复时使用，否则可以全为 0。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;目的端口&lt;/strong&gt;：16 位，交付报文时必须使用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;长度&lt;/strong&gt;：16 位，UDP用户数据报的长度，最小为 8（只有首部）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;检验和&lt;/strong&gt;：16 位，检测 UDP 用户数据报在传输中是否有错，如果有就丢弃。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;如果目的端口不正确，就丢弃报文，并由&lt;strong&gt;网际控制报文协议 ICMP 发送“端口不可达”差错报文给发送方&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机网络运输层概述</title>
      <link>http://localhost:1313/article/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%90%E8%BE%93%E5%B1%82%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 30 Oct 2022 19:52:27 +0800</pubDate>
      <guid>http://localhost:1313/article/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E8%BF%90%E8%BE%93%E5%B1%82%E6%A6%82%E8%BF%B0/</guid>
      <description>&lt;h2 id=&#34;1运输层概述&#34;&gt;1、运输层概述&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11进程之间通信&#34;&gt;1.1、进程之间通信&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;运输层向它上面的应用层提供通信服务，它数据面向通信部分的最高层，同时也是用户功能的最底层。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;端到端的通信不是指主机与主机之间的通信，准确来说，是&lt;strong&gt;主机进程之间的通信&lt;/strong&gt;，而通信的真正端点就是主机中的进程。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

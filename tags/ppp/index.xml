<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>PPP on zhuaowei的博客</title>
        <link>https://zhuaowei.top/tags/ppp/</link>
        <description>Recent content in PPP on zhuaowei的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 04 Nov 2022 21:20:42 +0800</lastBuildDate><atom:link href="https://zhuaowei.top/tags/ppp/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>点对点协议 PPP</title>
        <link>https://zhuaowei.top/article/%E7%82%B9%E5%AF%B9%E7%82%B9%E5%8D%8F%E8%AE%AE-ppp/</link>
        <pubDate>Fri, 04 Nov 2022 21:20:42 +0800</pubDate>
        
        <guid>https://zhuaowei.top/article/%E7%82%B9%E5%AF%B9%E7%82%B9%E5%8D%8F%E8%AE%AE-ppp/</guid>
        <description>&lt;p&gt;数据链路层主要有两种通信方式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;点对点信道&lt;/strong&gt;：一对一，点对点通信方式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;广播信道&lt;/strong&gt;：一对多的广播通信方式。&lt;/p&gt;
&lt;h2 id=&#34;1使用点对点信道的数据链路层&#34;&gt;1、使用点对点信道的数据链路层&lt;/h2&gt;
&lt;h3 id=&#34;11数据链路和帧&#34;&gt;1.1、数据链路和帧&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;链路（link，物理链路）&lt;/strong&gt;：从一个结点到相邻结点的一段物理通路（有线或无线），而中间没有任何其他交换结点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据链路（data link， 逻辑链路）&lt;/strong&gt;：除了必须有一条物理线路外，还必须有一些必要的通信协议来控制这些数据的传输。实现协议的软硬件加到链路上，就构成了数据链路。&lt;/p&gt;
&lt;p&gt;通常用&lt;strong&gt;网络适配器&lt;/strong&gt;（既有软件，也有硬件）来实现这些协议，包括数据链路层和物理层的功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规程（procedure）&lt;/strong&gt;：早期通信协议的叫法，在数据链路层，这俩是同义词。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;帧&lt;/strong&gt;：点对点信道的数据链路层的协议数据单元。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP数据报（数据报、分组、包）&lt;/strong&gt;：网络层的协议数据单元。&lt;/p&gt;
&lt;p&gt;通信步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A 的数据链路层将网络层交下来的 IP 数据报&lt;strong&gt;添加首部和尾部封装程帧&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;结点 A 把封装好的帧发送给结点 B 的数据链路层。&lt;/li&gt;
&lt;li&gt;若 B 的数据链路层收到的帧&lt;strong&gt;无差错&lt;/strong&gt;，从帧中提取出 IP 数据报交给网络层；否则丢弃这个帧。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;12三个基本问题&#34;&gt;1.2、三个基本问题&lt;/h3&gt;
&lt;p&gt;三个基本问题：&lt;strong&gt;封装成帧&lt;/strong&gt;、&lt;strong&gt;透明传输&lt;/strong&gt;和&lt;strong&gt;差错检测&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、封装成帧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一段数据的前后&lt;strong&gt;分别添加首部和尾部&lt;/strong&gt;。在传输比特流时，数据链路层就能根据首部和尾部的标记识别出报文的开始和结束，这也是首部和尾部最重要的作用——&lt;strong&gt;帧定界&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MTU（Maximum Transfer Unit）&lt;/strong&gt;：&lt;strong&gt;最大传输单元&lt;/strong&gt;，数据链路层规定了传送的帧的数据部分长度上限。&lt;/p&gt;
&lt;p&gt;当数据是由可打印的 ASCII 码组成的文本文件是，帧定界可以使用特殊的帧定界符。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ASCII 码由 7 bit 表示，一共由 128 个字符，其中包括 95 个可打印字符，33 个不可打印字符。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;**控制字符 SOH（Start Of Header， 十六进制是 0X01）&lt;strong&gt;放在一帧的最前面，表示帧的首部开始。另一个&lt;/strong&gt;控制字符EOT（End Of Transmission，十六进制是 0X04）**表示帧的结束。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、透明传输&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为帧的开始和结束标记使用的专门的字符，所以在报文中间任何 8 bit的组合都&lt;strong&gt;不允许出现和开始结束标记一样的编码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果传输的内容是由键盘输入的，那么永远都不会出现开始结束标记，永远可以放在真中传输，这样的传输就是&lt;strong&gt;透明传输&lt;/strong&gt;，也叫&lt;strong&gt;无差错传输（原样传输）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果传输的是二进制编码或者图像，那么就有可能出现开始和结束的字符，这样的传输就不是透明传输。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;透明&lt;/strong&gt;：表示一个实际存在的事物看起来却好像不存在一样，例如玻璃。在数据链路层透明传输意思就是，无论什么样的数据都能够无差错地原样通过这个数据链路层。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;转义字符&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了解决报文中可能出现的控制字符，就需要对出现开始结束控制字符进行转义，在SOH和EOT前面插入一个&lt;strong&gt;转义字符 “ESC”（十六进制是0X1B）&lt;/strong&gt;。接收端的数据链路层在上交网络层之前将转义字符 ESC 删去。这种方法称为&lt;strong&gt;字节填充（byte stuffing）或字符填充（character stuffing）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果转义字符也出现在数据中，就在转义字符前面再加一个转义字符。接收端收到两个转义字符就删除前面的一个。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、差错检测&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;比特差错&lt;/strong&gt;：在传输中，0 可能会变成 1，1 也有可能变成0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;误码率 BER（Bit Error Rate）&lt;/strong&gt;：传输错误的比特数占总数的比率。&lt;/p&gt;
&lt;p&gt;误码率和信噪比有很大关系，提高信噪比可以降低误码率。&lt;/p&gt;
&lt;p&gt;比特差错是无法避免的，目前数据链路层广泛试用了&lt;strong&gt;循环冗余检验 CRC（Cyclic Redundancy Check）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检测原理&lt;/strong&gt;：在发送端将要发送的数据分组，每组 k 个比特。假设要发送的数据是M（k bit），就在数据的末尾添加一个 n 位的&lt;strong&gt;冗余码&lt;/strong&gt;，所以一共要发送 （k + b）比特。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;计算过程&lt;/strong&gt;：首先在数据 M 末尾补上 n 个 0，用二进制的&lt;strong&gt;模 2 运算&lt;/strong&gt;进行计算。得到的（k + n）位的数&lt;strong&gt;除以&lt;/strong&gt;双方实现商定的长度位 （n + 1）位的除数 P得出的商是 Q，而&lt;strong&gt;余数 R 是 n 位的&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;模 2 运算：加法和减法一样，不进位。1111 + 1010 = 0101。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;计算出的 余数 R 作为&lt;strong&gt;帧检测序列 FCS（Frame Check Sequence）&lt;/strong&gt;，添加到数据的末尾发送出去。FCS 就是冗余码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检测方法&lt;/strong&gt;：接收端把接受到的每一个帧都除以同样的除数 P（模 2 运算），然后检查得到余数 R。如果传输过程中没有差错，那么经过 CRC 检验后，得到的余数是 0。&lt;/p&gt;
&lt;p&gt;如果出现差错，得到的余数还是 0 的&lt;strong&gt;概率是非常非常小的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果接收的帧是有差错的，那么数据链路层就会丢弃这个帧，换句话说，&lt;strong&gt;凡是接收的帧，我们都能以非常接近 1 的概率认为这些帧在传输过程中无差错&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可靠传输&lt;/strong&gt;：依靠上面的差错检测，并不能做到可靠传输，因为差错并不是只有比特差错一种，还有可能是另一种差错，即&lt;strong&gt;帧丢失、帧重复和帧失序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在过去，为了保证数据链路层上交的数据是可靠的，对于发送方发送的数据，数据链路层在 CRC 的基础上，增加了&lt;strong&gt;帧编号、确认和重传机制&lt;/strong&gt;。数据链路层的发送方对于发送的每一个帧都&lt;strong&gt;要求接受方在一定时间内给出确认&lt;/strong&gt;，否则就认为传输出现了差错，因而进行重传，直到收到确认为止。&lt;/p&gt;
&lt;p&gt;现在网络质量大大提高，出现伤处差错的情况很少见，因此互联网采取了区别对待的情况：对于质量良好的网络，不要求数据链路层向上层提供可靠传输的服务，即不使用确认和重传机制，可靠传输由上层协议实现（例如 TCP 协议）；对于质量较差的网络，数据链路层向上提供可靠的传输服务，即使用确认和重传机制。&lt;/p&gt;
&lt;h2 id=&#34;2点对点协议-ppp&#34;&gt;2、点对点协议 PPP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;点对点协议 PPP（Point-to-Point Protocol）&lt;/strong&gt;：是目前使用最广泛的数据链路层协议。&lt;/p&gt;
&lt;h3 id=&#34;21ppp-协议的特点&#34;&gt;&lt;strong&gt;2.1、PPP 协议的特点&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;PPP 协议就是用户计算机和 ISP 进行通信时使用的数据链路层协议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、PPP 协议应满足的需求&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;简单&lt;/strong&gt;：对数据链路层的帧，不需要纠错，不需要序号，也不需要流量控制。&lt;strong&gt;首要的要求就是”简单“&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;封装成帧&lt;/strong&gt;：必须使用特殊的字符作为&lt;strong&gt;帧定界符&lt;/strong&gt;，便于接收端准确判断帧的开始和结束位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;透明性&lt;/strong&gt;：如果数据中碰巧出现帧定界符的比特组合，就要采取有效的措施解决。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多种网络协议&lt;/strong&gt;：必须在同一物理链路上同时支持多种网络层协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多种类型链路&lt;/strong&gt;：必须能在多种类型的链路上运行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;差错检测（error detection）&lt;/strong&gt;：必须能对接收端收到的帧进行检测，并&lt;strong&gt;立即丢弃有差错的帧&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检测连接状态&lt;/strong&gt;：必须有一种机制能够及时（不超过几分钟）自动检测出链路是否处于正常状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最大传送单元&lt;/strong&gt;：必须对每一种点对点的链路&lt;strong&gt;设置最大传送单元 MTU 的默认值&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络层地址协商&lt;/strong&gt;：必须提供一种机制使通信的两个网络层的实体能够通过协商或能够配置彼此的网络层地址。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据压缩协商&lt;/strong&gt;：必须提供一种方法来协商使用数据压缩算法。但并不要求将数据压缩算法进行标准化。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在 TCP/IP 协议族中，可靠传输由运输层的 TCP 协议负责，因此 PPP 协议并不需要进行纠错，不需要设置序号，也不需要进行流量控制。&lt;/p&gt;
&lt;p&gt;PPP 协议只支持点对点的链路通信，且只支持双全工通信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2、PPP 协议的组成&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个将 IP 数据报封装到串行链路的方法。&lt;/li&gt;
&lt;li&gt;一个用来建立、配置和测试数据链路连接的&lt;strong&gt;链路控制协议 LCP（Link Control Protocol）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;一套&lt;strong&gt;网络控制协议 NCP（Network Control Protocol）&lt;/strong&gt;，其中的每一个协议支持不同的网络层协议，如 IP、OSI 的网络层、DECnet、AppleTalk等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;22ppp-协议的帧格式&#34;&gt;2.2、PPP 协议的帧格式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、各字段的意义&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PPP 的帧格式由首部和尾部组成，分别有 4 个字段和 2 个字段。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;先发送
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  | F  |  A | C  |  协议   |    信息部分    |   FCS  | F |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  | 7E | FF | 03 |        |    信息部分    |        | 7E|
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  | &amp;lt;------- 首部 -------&amp;gt; |   IP 数据报    |   尾部      |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;首部&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;F（Flag）&lt;/strong&gt;：1 字节，标志字段，开始帧定界符，规定为 0X7E。和结束帧定界符一样，&lt;strong&gt;表示帧的开始或结束&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A（Address）&lt;/strong&gt;：1 字节，地址字段，规定为 0XFF。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C（Control）&lt;/strong&gt;：1 字节，控制字段，规定为 0X03。&lt;strong&gt;A、C 两个字段实际上并没有携带 PPP 帧任何信息&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协议&lt;/strong&gt;：2 字节。如果为 0X0021，信息部分就是 IP 数据报；如果是 0XC021，信息字段就是 PPP 链路控制协议 LCP 的数据；如果是 0X8021 ，就是网络层的控制数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;尾部&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;FCS&lt;/strong&gt;：使用 CRC 的帧检验序列 FCS。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F（Flag）&lt;/strong&gt;：1字节，标志字段，同开始帧定界符。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;信息部分&lt;/strong&gt;：长度是可变的，不超过 1500 字节。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、字节填充&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当信息字段中出现和标志字段（0X7E）一样的比特组合时，就必须采取一些措施使这种形式上可标志字段一样的比特组合不出现在信息字段中。&lt;/p&gt;
&lt;p&gt;当 PPP 使用异步传输时，把转义字符定为 0X7D（01111101），并使用&lt;strong&gt;字节填充&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;0x7E&lt;/code&gt; -&amp;gt; &lt;code&gt;0x7D,0x5E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0x7D&lt;/code&gt; -&amp;gt; &lt;code&gt;0x7D,0x5D&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ASCII 码中的控制字符（小于 0x20 的字符），在前面加一个转义字符 0x7D，并改变编码。例如 &lt;code&gt;0x03&lt;/code&gt; -&amp;gt; &lt;code&gt;0x7D,0x23&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于在发送段进行了字节填充，在链路上传输的字节数就超过了原来的字节数。在接收端收到数据之后，进行与发送端相反的操作，就恢复出了原来的信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、零比特填充&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PPP 协议在 SONET/SDH 链路时，使用同步传输而不是异步传输，这中情况下使用零比特填充实现透明传输。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同步传输：一连串的比特连续传送。&lt;/p&gt;
&lt;p&gt;异步传输：逐个字符地传送。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;实现方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;发送端：先扫描整个信息字段，只要发现有 5 个连续 1，就立即填入一个0。&lt;/p&gt;
&lt;p&gt;接收端：先找到标志字段 F以确定一个帧的边界，然后扫描其中的比特流，当发现 5 个连续 1 时，就删除后面的一个 0。&lt;/p&gt;
&lt;h3 id=&#34;23ppp-协议的工作状态&#34;&gt;2.3、PPP 协议的工作状态&lt;/h3&gt;
&lt;p&gt;PPP 链路的初始化：当用户拨号接入 ISP 后，就建立了一条从用户隔热电脑到 ISP 的物理层连接。之后用户电脑向 ISP 发送一系列链路控制协议 LCP 分组（封装成多个 PPP 帧），以便建立 LCP 连接。这些分组及响应选择了将要使用的一些 PPP 参数。&lt;/p&gt;
&lt;p&gt;接下来还要进行网络层的配置，网络控制协议 NCP 给新接入的用户电脑分配一个临时的 IP 地址。这样用户电脑就称为互联网上一个有 IP 地址的主机了。&lt;/p&gt;
&lt;p&gt;当用户通信完毕时，NCP 释放网络层连接，收回分配出去的 IP 地址。接下来，LCP 协议释放数据链路层连接，最后释放的时物理层的连接。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   +----------------------------&amp;gt; 链路静止                设备之间无链路
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |              /                 |                        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |              |                 | 物理层连接建立           |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;LCP 链路终止     LCP 配置             V                        V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ^            协商失败 &amp;lt;--------- 链路建立                 物理链路
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |                                | LCP 配置协商            |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |            鉴别失败             V                        V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;链路终止 &amp;lt;------------------------- 鉴别                    LCP 链路
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   ^                               | 鉴别成功或无须鉴别         |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |                               V                         V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |                            网络层协议                已鉴别的 LCP 链路
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;链路故障或关闭请求                    |                         |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |                               | NCP 协商                 |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |                               V                         V
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   +---------------------------- 链路打开                已鉴别的 LCP 链路
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                        和 NCP 链路
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;PPP 链路的起始和终止状态永远是&lt;strong&gt;链路静止&lt;/strong&gt;，这时用户电脑和 ISP 的路由器之间并不存在物理层的连接。&lt;/p&gt;
&lt;p&gt;当用户电脑通过调制解调器呼叫路由器时，路由器就能检测到其发出的载波信号，双方建立了物理连接后，PPP 就进入了**链路建立（Link Establish）**状态，目的是建立链路层的 LCP 连接。&lt;/p&gt;
&lt;p&gt;这时 LCP 开始协商一些配置选项，即发送 &lt;strong&gt;LCP 的配置请求帧（Configure-Request）&lt;/strong&gt;。这时一个 PPP 帧，其协议字段是 LCP 对应的代码，信息字段包含特定的配置请求。另一端可以发送以下几种响应的一种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;配置确认帧（Configure-Ack）&lt;/strong&gt;：所有选项都接受。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置否认帧（Configure-Nak）&lt;/strong&gt;：所有选项都理解，但不能接受。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置拒绝帧（Configure-Reject）&lt;/strong&gt;：选项有些无法识别或不能接受，需要协商。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;LCP 配置选项包括：链路上的最大帧长、所使用的鉴别协议（authentication protocol）（如果有），以及不适用 PPP 帧中的地址和控制字段（因为是固定的，且没有任何意义）。&lt;/p&gt;
&lt;p&gt;协商结束后双方就建立了 LCP 链路，接着就进入了**鉴别（Authenticate）&lt;strong&gt;状态。这一状态中，只允许传送 LCP 协议的分组、鉴别协议的分组以及监测链路质量的分组。若鉴别失败，则转到&lt;/strong&gt;链路终止（Link Terminate）&lt;strong&gt;状态。若鉴别成功则进入&lt;/strong&gt;网络层协议（Network-Layer Protocol）**状态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鉴别协议：可以使用 &lt;strong&gt;口令鉴别协议 PAP（Password Authentication Protocol）&lt;/strong&gt;，如果为了更好的安全性，可以使用更复杂的 握手鉴别协议（Challenge-Handshake Authentication Protocol）。&lt;/p&gt;
&lt;p&gt;鉴别由发起通信的一方发送身份识别表示符和口令，系统允许用户重试若干次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在&lt;strong&gt;网络层协议&lt;/strong&gt;状态，PPP 链路的两端的网络控制协议 NCP 根据网络层的不同协议互相交换网络层特定的网络控制分组。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为现在的路由器支持多种网络层协议，所以这个步骤很重要。虽然两端使用不同的网络测协议，但是仍然可以使用同一个 PPP 协议进行通信。&lt;/p&gt;
&lt;p&gt;如果 PPP 链路上运行的是 IP 协议，则 PPP 链路的每一端配置 IP 协议模块（如分配 IP 地址）时就要使用 NCP 中支持 IP 的协议——IP 控制协议 IPCP（IP Control Protocol）。IPCP 协议也封装成 PPP 帧在链路上传送，其协议字段为 0x8021。&lt;/p&gt;
&lt;p&gt;在低速链路上运行时，双方还可以协商使用压缩的 TCP 和 IP 首部，减少在链路上发送的比特数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当网络层配置完成后，链路就进入可进行数据通信的&lt;strong&gt;链路打开（Link Open）&lt;strong&gt;状态。这时，链路的两个 PPP 端点可以互相发送分组，还可以发送&lt;/strong&gt;回送请求 LCP 分组（Echo-Request）&lt;strong&gt;和&lt;/strong&gt;回送回答 LCP 分组（Echo-Reply）&lt;/strong&gt;，以检查链路的状态。&lt;/p&gt;
&lt;p&gt;数据传输结束后，可以有链路的一端发出&lt;strong&gt;终止请求 LCP 分组（Terminate-Request）&lt;strong&gt;请求终止链路连接，在收到对方发来的&lt;/strong&gt;终止确认 LCP 分组（Terminate-Ack）&lt;strong&gt;后，转到&lt;/strong&gt;链路终止&lt;/strong&gt;状态，如果链路出现故障，也会从&lt;strong&gt;链路打开&lt;/strong&gt;转到&lt;strong&gt;链路终止&lt;/strong&gt;。当调制解调其的载波停止后，则回到&lt;strong&gt;链路静止&lt;/strong&gt;状态。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
